// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Article {
  id        String      @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ArticleComment ArticleComment[]
}

model MarketArticle {
  id        String      @id @default(uuid())
  title     String
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  MarketComment MarketComment[]
}


model User {
  id        String      @id @default(uuid())
  nickname  String

  ArticleComment  ArticleComment[]
  MarketComment MarketComment[] 
}

model ArticleComment {
  id       String      @id @default(uuid())
  content  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String


  article Article @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId String
}


model MarketComment {
  id       String      @id @default(uuid())
  content  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user    User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId  String

  marketArticle MarketArticle @relation(fields: [articleId], references: [id], onDelete: Cascade)
  articleId String
}

