generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            Int       @id @default(autoincrement())
  name          String
  description   String
  price         Int
  tags          String[]
  images        String[]
  favoriteCount Int       @default(0)
  createdAt     DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt     DateTime  @updatedAt @db.Timestamptz(6)
  comments      Comment[]
  isFavorite    Boolean   @default(false)
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int
}

model Article {
  id        Int       @id @default(autoincrement())
  title     String
  content   String
  images    String[]
  likeCount Int       @default(0)
  createdAt DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt DateTime  @updatedAt @db.Timestamptz(6)
  comments  Comment[]
  isLiked   Boolean   @default(false)
  User      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String
  userId    Int
  articleId Int?
  productId Int?
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @updatedAt @db.Timestamptz(6)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  article   Article? @relation(fields: [articleId], references: [id], onDelete: Cascade)
  product   Product? @relation(fields: [productId], references: [id], onDelete: Cascade)
}

model User {
  id                Int       @id @default(autoincrement())
  email             String    @unique
  nickname          String    @unique
  image             String?
  encryptedPassword String
  createdAt         DateTime  @default(now()) @db.Timestamptz(6)
  updatedAt         DateTime  @updatedAt @db.Timestamptz(6)
  product           Product[]
  article           Article[]
  comments          Comment[]
}
